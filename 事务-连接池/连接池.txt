类似于 把连接对象 集中管理存储在一个Vector对象中，  (Vector 是一个线程安全的类   矢量的意思)
一旦数据库连接建立后，不同的数据库访问请求就可以共享这些连接，这样，通过复用这些已经建立的数据库连接，
可以克服上述缺点，极大地节省系统资源和时间。   

写一个连接池 类似一个 实现一个接口DataSource  然后用Vector容器存取

(池化 技术    就是  把相应的东西放在容器   缓存 		为了解决获取的时间太快, 为了快)

在java 中 使用javax.sql.DataSource接口来表示(形容) 连接池
	DataSource(数据源)和连接池(Connection Pool)是同一个   
	注意:DataSource和JDBC一样,仅仅只是接口,SUN公司自己不提供实现,由第三方组织提供.

	实现这个接口的 有    DBCP Spring框架
		 	druid:阿里巴巴连接池 最好的  德鲁伊


使用连接池和不使用连接池的区别  

如何获取 Connection对象:    
未使用连接池   DriverManager.getConnection(url,username,password)
使用连接池    去获取Connection (面向对象的思想 肯定在连接池里有这个方法)  主要是怎么拿到连接池对象

如何释放Connection对象 (Connection对象.close())
未使用连接池   和服务器断开   
使用的话        把连接对象还给连接池

DataSource 接口由驱动程序供应商实现。共有三种类型的实现： 

基本实现 - 生成标准的 Connection 对象 
连接池实现 - 生成自动参与连接池的 Connection 对象。此实现与中间层连接池管理器一起使用。 
分布式事务实现 - 生成一个 Connection 对象，该对象可用于分布式事务，大多数情况下总是参与连接池。此实现与中间层事务管理器一起使用，大多数情况下总是与连接池管理器一起使用。