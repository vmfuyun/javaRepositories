每一个类都对应有一个构造器 例如:
  
 class Student()
{
	// 这里面就会有一个
	Student()
	{
 		
	}
}
	
	当类是有public修饰的话 即构造器也会有public修饰





 创建一个学生对象的时候,代码如下:
Student s1  = new     Student();
这个代码特别像:在调用一个方法名称为Student的无参数方法.
-----------------------------------------------------
我们把这种特殊的方法,称之为构造方法,构造器(构造函数/构造子:Constructor).
但是我们发现在Student类中,却找不到该构造方法,找不到,却又没有报错.
编译器在编译源文件的时候,会创建一个缺省的构造器.
---------------------------------------------------------
构造器的作用:
           1):创建对象,凡是必须和 new 一起使用.
           2):完成对象的初始化操作.

构造器的特点:
          1):构造器的名称和当前所在类的名称相同.
                  如果构造器 名称叫 ***.new  ***();
你看出来创建的是什么类型的对象吗?
          2):禁止定义返回类型,千万不要使用void作为返回类型. void  Student(){}这是普通方法.
                     假设需要写返回类型,也应该这样写:Student   Student(); 既然所有的返回类型都和所在类名相同,何必再写.
          3):在构造器中,不需要使用return语句.
                  其实构造器是有返回值的,返回的是当前创建对象的引用.
----------------------------------------------------------
编译器创建的默认构造器的特点:
         1):符合构造器特点.
         2):无参数的.
         3):无方法体.
         4):如果类A没有使用public修饰,则编译器创建的构造器也没有public修饰.
                              使用了public修饰,则编译器创建的构造器也使用public修饰