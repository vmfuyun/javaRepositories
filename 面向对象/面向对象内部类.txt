内部类:定义在类结构中的另一个类:
	类中的定义的成员:
        字段
        方法
        内部类

-------------------------------------------

为什么使用内部类：

	1):增强封装，把内部类隐藏在外部类之内，不许其他类访问内部类。
	2):内部类能提高代码的可读性和可维护性，把小型类嵌入到外部类中结构上代码更靠近。
	3):内部类可以直接访问外部类的成员。

-------------------------------------------

内部类根据使用不同的修饰符或者定位的位置不同,分成四种内部类：

	①　实例内部类：  内部类没有使用static修饰.
	②　静态内部类：  内部类使用了static修饰.
	③　局部内部类：  在方法中定义的内部类.
	④　匿名内部类适合于仅使用一次使用的类,属于局部内部类的特殊情况：

内部类 定义  格式           new 父类构造器 ([实参列表])或者接口(){
			//匿名内部类的类体部分                                                 
                                       }


注意              接口没有构造器  所以这只是一个格式   
	说明的意思是  这个匿名内部类=实现一个接口或者继承父类方法
-------------------------------------------

对于每个内部类来说:Java编译器会生成独立.class文件.

	成员内部类:外部类名$内部类名字
	局部内部类:外部类名$数字内部类名称
	匿名内部类:外部类名$数字


-------------------------------------------

//双向链表:火车整体
public class LinkedList
{
	//第一个节点
	private Node first;

	//第二个节点
	private Node last;

	//节点类型:火车车厢
	class Node
	{
		private Node prev;//上个节点
		private Node next;//下个节点
		private Object ele;//当前节点的数据
	}
}