什么是接口:

硬件接口
	指的是两个硬件设备之间的连接方式。硬件接口既包括物理上的接口，还包括逻辑上的数据传送协议。

软件接口:
	程序代码,特殊的类,表示一种规范,是具有的N个方法的特征集合.

---------------------------------------------

 在封装时,显示器封装了很多歌电子元件等,最终向外暴露数据交互的孔--->接口.
    目的:设备和设备之间通信桥梁.

在Java中,接口表示一种规范/约束/要求实现者必须遵循该规范:用来约束使用者应该怎么做.

---------------------------------------------

为什么要遵循规范?如果不遵循规范会出现什么问题.
   遥想山寨机横行那些年,A品牌,B品牌,C品牌......
   带来问题,不同品牌的手机之间,充电的接口是不相同的,不爽.

---------------------------------------------

当统一接口.统一规范之后:
	大多数Android手机的充电的接口是相同
	( Micro-USB/type-c/lightning).

---------------------------------------------

生活中，咱们说的USB接口其实并不是我们所看到的那些插槽，而是那些插槽所遵循的一种规范（标准）。
      USB是一种协议(规范):应该规范所有的USB设备具有某些功能:.
           每秒必须传输多少M数据.
           支持热插拔
            ........
我们所看到的那些插槽是根据USB规范设计出来的产品，也就说插槽是USB规范的实例。
对于不同型号的USB设备而言，他们各自的USB插槽都需要遵循同一个规范，
如此可以保证任何插入插槽的设备都能与主板正常通信。对于同一种型号的主板上的多个USB插槽，他们有相同的数据交换方式，相同的实现细节，可认为他们都是同一个类的不同实例。

---------------------------------------------

接口只定义了类应当遵循的规范，却不关心这些类的内部数据和其功能的实现细节。
站在程序角度上说接口只规定了类里必须提供的方法，从而分离了规范和实现，增强了系统的可拓展性和可维护性。

规范和实现相分离的好处：
	主板上提供了USB插槽，只要一个遵循了USB规范的鼠标，就可以插入USB插槽，并与主板正常通信。至于这个鼠标是谁生产的，内部是如何实现的，主板都不需要关心(只要遵循了USB规范就可以插在主板上使用)。当鼠标坏了的时候，我们会不会把主板换了？

---------------------------------------------

面向接口编程:
	接口和实现类体现了真正的多态.