-------------面向对象day01----------------
	1:自学java
	2:做好笔记
	
:  以java中的对象来实现需求.

-------------------------------------------
1:面向对象和面向过程
	面向过程 ---(执行者)---> 我该怎么做
	面向对象 ----(指挥者)--> 我该 让 哪个对象 来做
		例如: 对数组 arr 进行排序(从小到大)
			面向过程:我要一步步实现代码
				for(){
					for(){
						代码
					}
				}
			面向对象:  有没有哪个对象可以对数组排序---> Arrays
				Arrsys.sort(arr);
		注意:要是没有我想要的对象 怎么办?
			没有我要的对象 ---> 可以自己写,只要代码不删除,下一次就能继续使用
		    自己第一次写 -----面向过程-----> 代码保留,下次继续用-->就是面向对象了
		面向对象是 基于  面向过程的 .


-------------------------------------------------------------------------	
2:成员变量和局部变量:
		class 类名{
			数据类型 变量名;                            //成员变量 ----> 写在类中
			
			修饰符 返回值类型 方法名(数据类型 变量名..){//局部变量 ----> 写在方法中
				数据类型 变量名;
			}
			
		}
		
	    区别:
					成员变量      局部变量
			位置	 类中 			方法中
			默认值	  有			没有
			作用域	  整个类		当前方法中	
			生命周期(什么时候产生  什么时候销毁)
					  跟随对象		跟随方法 	
----------------------------------------------------------------		
对象是什么?----->将 数据 和 操作数据的方式 合成一个整体,这个就一个是对象.
	1:对象是什么样子?
		数值的描述--->成员变量
	2:对象能做什么?
		功能描述----->成员方法(函数)
		
对象怎么来?----> 通过  所属的  类 new出来.
	

类和对象的关系:
	明星类:.......        类
		赵丽颖 柳岩       该类的一个具体体现(实例 对象)
	老师类
		刘**  苍井空
		
	类:某一类事物
	对象:该事物的一个具体体现(实例)
	理解:  类就相当一张建筑的图纸. 我们根据这个图纸(类) 生成一个栋栋建筑(对象).
		   图纸 只需一份 , 该图纸的建筑有多个.


类的定义:(重点 1 / 3)
			1:格式
				public class Xxx{
					---------成员变量-------
					数据类型 变量名  ;
					---------成员方法-------
					修饰符 返回值类型 方法名(参数列表){
						...
					}
				}
				
				
			2:注意:
				成员方法 不能加 static
类的使用:创建该类的对象
			1:格式
				类名 对象名  = new 类名();
					创建 类 的对象 ,将该对象的地址 保存在 对象名 中.
				例如:     Cat   Dog
						Cat c = new Cat();
							创建 Cat 的对象 ,将该对象的地址 保存在 c 中.
						Dog d = new Dog();
						
			2:对象的使用:
				a:使用成员变量
					赋值--------->  对象名.成员变量名 = 值;
					取值--------->   数据类型 变量名 =对象名.成员变量名 ;
				b:使用成员方法
					对象名.方法名(参数);
			
			2:注意事项:
				a:数组也是对象
					int[] arr = new int[10];
					int len = arr.length;//将对象 arr 中 length的成员变量的值 取出 赋值到 len
				b:new 一次, 会获得一个独立的对象
					Dog d1 = new Dog();
					Dog d2 = new Dog();
					Dog d3 = new Dog();
					System.out.println(d1);
					System.out.println(d2);
					System.out.println(d3);
					// 三个独立的对象 , 三个不同的地址值
					
3:构造器(构造方法):----->对象创建必须调用的方法.
	1:作用:
		a 创建对象 
		b 并给成员变量赋值
	2:格式:
		a: 方法名跟类名一致
		b: 没有返回值,连 void 都没有
		例如:
			class XxxOoo{
				public XxxOoo(){
					...
				}
			}
		
	3:注意事项:
		a:类中 你要是没有写构造器,会默认提供一个空参的构造器
			(你不写  , 系统给你写一个)
			(你写了  , 系统不再提供)
		
		b:类名 对象名 = new 类名();
				new 类名(); ----->执行该类的构造器.
		
		c:一个对象能不能多次调用构造器??? 不能  这样是新的对象来顶替.
				Dog d = new Dog();//新建一个对象,将地址值 赋值给  变量d 
				d = new Dog();    // 再次新建对象, 重新赋值给 d , 将第一次的d中的地址覆盖了
				d = new Dog();
				d = new Dog();
				//  d 变量中 保存的不是 最开始的那个对象了.
-------------------------------------------------------------
	1:类的编写
	2:对象的创建和使用
	3:构造器给对象赋值
	
-------------------------------------------------------------
面向对象的三大特征:---------> 面对对象 80% 的知识点
	封装
		定义:隐藏实现细节, 提供访问方式 ------>隐藏是为了更好的使用.
		实现步骤:
			1:隐藏-------> 通过访问修饰符来实现
					private					 可以
					默认                     可以     可以   
					protected(保护子类)      可以     可以   可以  
					public					 可以     可以   可以  可以
				
			2:提供使用方式---->用方法操操作
		好处:
			1:提高安全性
			2:提高代码的复用性
	继承
		
	多态
	
----------------------------javaBean规范--------------------------------------
	1:类名 public 修饰
	2:写出 无参构造器
	3:字段必须private修饰,给出get和set方法
	
	public class Xxx{//类名 public 修饰
		public Xxx(){} //写出 无参构造器
		
	 	private 数据类型 ooo; //字段必须private修饰,给出get和set方法
		
		public void setOoo(数据类型 o){
			ooo = o;
		}
		
		public 数据类型 getOoo(){
			return ooo;
		}
		
	}
	
---------------------------------------------------------------------------------
1:理解 类 
2: 编写 类
	public class 类名{
		....
	}
3: 通过类 创建对象
	格式: 类名 对象名 = new 类名();
4:如何使用对象
	对象名.方法();
	对象名.方法(参数);
	数据类型 变量名 =  对象名.方法();
5:创建对象,并赋值---->构造器
	格式
	作用
	
6:封装

7:javaBean规范

	

