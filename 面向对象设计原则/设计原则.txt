单一责任原则:
	一个类只负责一件事,  方法也是一样,一个方法就只是干一件事:   解耦 责任分离
开放封闭原则:
	也就是对添加新功能是开放的,但是对修改原先的代码是关闭的   也就是 尽量不要去修改原先的代码(代价很大)
里氏替换原则:
	也就是 子类是可以替代父类,    也是多态的体现   这个 用的比较多
接口分离原则:
	也就是 接口要 功能唯一,    不要把所有的接口都总到一个上面.  修改啦 什么的 很难
依赖倒置原则:
	高层的模块不应该依赖底层模块,  这两个都应该依赖一个抽象,  
	高层模块包含一个应用程序中重要的策略选择和业务模块，
	如果高层模块依赖于低层模块，那么低层模块的改动就会直接影响到高层模块，从而迫使高层模块也需要改动。
	(重要)   一般依赖一个接口比较好  更好的解耦;
