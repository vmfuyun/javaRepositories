  for(数组元素类型 变量 : 数组名){
	
	循环体     //  一般打印用的多
	}
不操作 索引的情况下

	相当于把数组中的元素   循环  给了变量  做想加的话 直接 加变量就行		


	//增强for循环-foreach
class ForEachDemo
{
	public static void main(String[] args) 
	{
		//需求:定义一个数组,使用循环迭代出数组中的每一个元素.
		//使用for循环操作如下:
		int[] nums = {10,20,30,40,50};
		//使用循环迭代出数组中的每个元素
		for (int index = 0; index < nums.length; index ++)
		{
			System.out.println(nums[index]);
		}
		/*
		其实，我们在使用循环迭代数组的时候
		往往不关心迭代变量(数组的索引),
		有没有更好的方式，
		迭代数组元素的时候，
		只需要操作数组元素,不去操作数组索引.
		从java5开始,提供了一个新语法:增强for循环(foreach).
		语法:
		for(数组元素类型  变量  :  数组名)
		{
				循环体
		}
		*/
		System.out.println("-------------------------------");
		for(int ele : nums)
		{
			System.out.println(ele);
		}
		/*
		注:1.通过反编译工具进行对比,其实底层依旧使用for循环来操作数组.
		我们把增强for循环一类成为-->语法糖.
		语法糖:让开发者写出更少,更简单的代码,完成相同的功能.底层的运行并没有简化.
		2.for循环功能比增强for循环更加全面.
		3.如果迭代数组元素,而不关心数组索引的时候，首选增强foreach,更简洁
		4.foreach还未结束-->集合框架
		*/
	}
}