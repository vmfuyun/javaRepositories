  使用this
  
  1 解决成员变量和参数(局部变量)之间的二义性,必须使用.(避免同样的变量名,用于区别).
  2  同类中的实例方法间互调.  方法之间的互相调用...实例 约等于对象.(此时可以省略this )
  3  将当前对象作为参数传递给另一个方法. 就是this在参数那
  4   将this作为方法的返回值(链式方法编程)   
  5   构造器重载的互调，this（参数）必须写在构造方法第一行；   
       构造器中只能调用一个重载构造器    尽量的少参数调用多参数  用不到的参数就用它的初始值来 给于 初始.
	         			当多个构造器重载时,或者多个方法重载时,
					一般的,我们是少参数的调用多参数的.
					参数越多,该方法考虑的未知的因素也越多,也就是说功能更强大.
	
  6   static不能和this一起使用;
        当字节码加载进JVM,static成员就已经存在了
   	但是此时对象还没有创建,没有对象就没有this.



构造器重载，【参数少】的构造器调用【参数多】的构造器。
【必须是构造器内第一行】

相互调用【不是this.xxxx();】

正确如下：
	User(String name)
	{
	   this(name , 0 ); //必须是构造器内第一行
	}
	User(String name, int age)
	{
	    this.name = name;
	    this.age = age;
	}