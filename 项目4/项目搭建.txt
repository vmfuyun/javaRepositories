做成插拔式的  所以设置成 pom   引入依赖形式
导入依赖模式:
	使用maven方式 快速开始    shop-parent  删除src   打包方式是pom
	默认是jar类型
	
	配置
	注册中心  引入依赖,yml文件 开启  
	配置中心    需要连到注册中心 和  配置中心  
	网关中心   注册中心的 配置中心的   
   和dubbo差不多	
	web.frontend  是给自己用的controller 
		rpc  是给别人调用接口的
	
	前后端 分离好处
	并行开发
	性能 比原先更加快 ,因为前端是在客户端是有缓存的  每次访问的话  我们只需把数据传过去就行,不用管页面

加密:	信息拦截,明文问题   
	处理 方式 执行加密, 然后后端 再加盐 加密
	

	nginx 也能实现  主要依靠的是

	跨域问题的出现原因是:同协议，同域名和同端口   浏览器的   同源策略
	跨域问题    nginx方案--- 一般就是避免  因为nginx 是反向代理的  会建立一个虚拟ip,每次访问都是通过这个虚拟ip进行访问 所以域名是一样的
		  cors方案 --- 支持所有的请求方法, 是 发起请求之前, 客户端会 提前发起请求看服务端是否许跨域访问,服务端允许的话,会返回对应的参数到客户端,
			      这样客户端 每次访问都会带有对应的参数,这样就可以实现了跨域访问, 通过请求头
		  jsonp方案   前端的预请求,     如果是