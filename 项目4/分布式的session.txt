返回给前端的
为了更好的区别  使用状态码  更好表达 更多的信息
	对应后台式一个 result 类 为了更好的返回 一般使用 泛型
	
	如果业务层出错误了! 将异常抛到控制器, 原始的是一个string类型的  不符合我们传很多的信息的要求  ,, 自定义异常对应的CodeMsg类进行固定错误码 一类的
	
	控制器: 统一异常处理

	rusult<T>基本上都用  所以就在commo创建 common包 建立对应的成功失败 执行默认
	
进行登陆操作
	添加返回值 resoult
	service 添加 login 方法   为空 为非法操作 返回对应的异常
	JSR303 参数校验  javabean 我们可以直接将这些注解加在我们JavaBean的属性上面，就可以在需要校验的时候进行校验了
	加依赖  在server  贴注解 @pattem 校验规则        在形参LoginVo上贴上@Valid  
				统一异常处理 添加对应的bind异常 处理  @ex'Handler
		messageFormat	参数的 不确定 可以使用 占位符 {0} 第0号位
		要紧的注意 static 的 常量 一份
	通用性  this方式,  泛型形式

springBoot 自动装配
	starter需要做的   把项目引入的对象先创建好, 也配置很多 默认配置
	
	

	