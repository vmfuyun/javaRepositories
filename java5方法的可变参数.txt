可变参数  只能改变个数  不能改变元素类型  
	
	调用的时候 又返回的话  元素类型 变量 = 方法名称(数组);

	方法名(元素类型 ...名称)




	可变参数 必须要是形参的最后     
	只能有一个可变参数


	
方法的可变参数必须作为方法的最后一个参数,避免参数的歧义性(因为可变参数在自动创建参数数据数组时,需要明确知道哪些参数数据用来创建)
------例如------
public static void main(String[] args) 
	{
		double sum=getSum(0.8,10.0,20.0,30.0,40.0,50.0);
		System.out.println(sum);
	}
	static double getSum(double cutoff,double ... arr)
	{
		double sum=0.0;
		for(double price:arr)
		{
			sum += price;
		}
		return sum*cutoff;
由于本代码遍历方式是foreach遍历,所以将折扣cutoff和价格参数放在一起是不行的,因为foreach无法操作数组的索引.  如果需要将其放在一起,请使用普通for遍历数组,但这种将cutoff也放入价格中的方式并不推荐.

可变参数语法糖本质:
    其中,  ... 表示的是在形参列表处声明的是一个数
    组,在调用时将实参中所需要的数据取出用来创建
    出一个以实际参数为元素的数组
...的意义
    由于在调用时,他始终都会自动创建一个实参数组(没有实参数据时,那么创建的就是一个空数组,长度为0),所以不会出现NullPointerException.
1.  利用...时,实际参数可以就是一个数组也没关系.
2.  ...后的变量引用的是一个数组,他拥有有数组的属性
 3.  由于其本质是声明了一个数组形参,因此当再次定义一个签名与其本质签名相同的方法,编译器会报错