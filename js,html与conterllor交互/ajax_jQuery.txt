 ajax 是一个综合的技术  
	主要 有一个XMLHttpRequest类,  ajax对象  
	 是一个前端 不改变页面的情况下 进行 与 服务器 进行 异步 交互 和实现网页内容的局部更新 的技术
	
缺陷 : 
	1,对浏览器的兼容性不好;
	2,后退功能失效: 要提示 数据更新
	3,没有h5好
	4,不支持跨域访问;

操作l流程   ---参看ajax	API
	//创建对象	new XMLHttpRequest();
    	//创建请求	open(请求方式,路径,)
  	  //发送请求	ajax对象.send
 	   //获取响应----需要去验证 返回的(ajax.readyState==4) 状态和 返回的(ajax.status==200)是不是 200  
		 ///req.onreadystatechange=function () {   为响应添加一个等待事件为了能获取到正确的响应

post 请求的 类似
	就是需要把 信息进行封装  要字符串形式的封装    但是需要设置 form表单的类型值


jQuery 框架
	是一个轻量级的js库,   
	主要作用
	jQuery 使用户能更方便地处理 HTML（标准通用标记语言下的一个应用）、events、实现动画效果，并且方便地为网站提供 Ajax 交互。
	jQuery 的语法设计可以使开发者更加便捷，例如操作文档对象、选择 DOM 元素、制作动画效果、事件处理、使用 Ajax 以及其他功能。

jquery 对象
	
	1.1、通过 jQuery 方法获取的页面元素，都是 jQuery 对象。
	1.2、jQuery 对象其实就是对 DOM 对象进行了包装，增强相关了方法，让开发者使用起来更加便利。
	1.3、虽然 jQuery 对象包装了 DOM 对象但是两种不能混用，各位可以理解为 jQuery 对象与 DOM 对象是两个不类型的对象，
		但是我们调用 jQuery 对象的方法，事实上底层代码还是操作的是 DOM 对象。
2、$ 与 jQuery

	$  表示 jQuery对象，即 $ === jQuery。

	DOM 对象和 jQuery 对象的转换	（jQuery中没有提供获取标签名的方式，所有需要把 jQuery 对象转换为 DOM 对象）：
	// jQuery对象			关键 一般是 使用 获取 第几个 就是DOM对象
	var username = $("#username");
	// jQuery对象转换为 DOM 对象
	console.debug(username[0]);
	// get(0) 等效于 username[0]
	console.debug(username.get(0)); 
#  表示要获取的id类型的


选择器
	jQuery 选择器是 jQuery 类库最重要功能之一。
	这些选择器的用法和 CSS 的语法非常相似，结合 jQuery 类库的方法你可以很方便快速地定位页面中任何元素，并为其添加响应的行为。
	jQuery 提供获取页面元素一种语法。
选择器一般由“特殊符号”+“字符串”组成。比如:“#”代表 id，“mydiv”是一个字符串，那么整体 #mydiv 代表的是 id 为 mydiv 的元素对象。
3、如何使用选择器获取元素

语法：$(“选择器”) ，如 $ (“#mydiv”)。

注意：如果通过 jQuery 方法获取页面中元素，没有查找到，返回值不是 null，返回值为一个空数组 []，
所以判断是否获取到元素，通过 jQuery.length != 0 来判断。

2.1、#id，用法：$(“#myDiv”)  返回值单个元素的组成的集合。
       说明：这个就是直接选择 html 中的 id=“myDiv”。

2.2、Element，用法：$(“div”)  返回值元素集合。-----标签的集合
       说明：element 的英文翻译过来是“元素”，所以 element 其实就是 HTML 已经定义的标签元素，例如 div，input，a 等等。

2.3、class，用法：$(”.myClass“)  返回值元素集合。 通过 class属性查找
       说明：这个标签是直接选择 HTML 代码中 class=”myClass” 的元素或元素组（因为在同一 HTML 页面中 class 是可以存在多个同样值的元素）。

2.4、*，用法：$(“*”)  返回值元素集合
      说明：匹配所有元素，多用于结合上下文来搜索。

2.5、selector1, selector2, selectorN，用法：$(“div,span,p.myClass”) 返回值元素集合
      说明：将每一个选择器匹配到的元素合并后一起返回。
你可以指定任意多个选择器，并将匹配到的元素合并到一个结果内，
其中 p.myClass 是表示匹配元素 p 是标签且 class=”myClass”。

	一个 空格 是对应的 子标签----------
	.selected 表示 class 为这个的 标签



2、层次选择器

	2.1 、ancestor    descendant     祖先    后代
      		用法：$(“form input”) ;   返回值元素集合
		      说明：在给定的祖先元素下匹配所有后代元素。

	2.2、parent  >  child                   父亲  >   儿子      用法： $(“form > input”) ;    返回值元素集合
		      说明：在给定的父元素下匹配所有子元素。

	2.3、prev + next                          大兄  +  二弟
	      用法： $(”label + input“) ;   返回值元素集合
	      说明：匹配所有紧接在 prev 元素后的 next 元素。

	2.4、prev ~ siblings                    大兄  ~  所有的弟弟
 	     用法：$(“form ~ input”) ;    返回值元素集合
	      说明：匹配 prev 元素之后的所有 siblings 元素。
	      注意：是匹配之后的元素，不包含该元素在内，并且 siblings 匹配的是和 prev 同辈的元素，其后辈元素不被匹配。
	      注意：prev ~ siblings 选择器只能选择 “prev” 元素后面的同辈元素； 而 jQuery 中的方法 siblings() 与前后位置无关，只要是同辈节点就可以选取。


过滤器选择
	过滤选择器：通过特定的过滤规则来筛选所需要的 DOM 元素，过滤规则与 CSS 中的伪类选择器语法相同。
该选择器一般以一个冒号（:）开头，按照不同的过滤规则，可分为基本过滤，内容过滤，可见性过滤，属性过滤，子元素过滤，表单对象属性过滤选择器。


过滤选择器的操作规则： $(“初步过滤:准确过滤 “);

