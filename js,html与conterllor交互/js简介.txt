目的
	  操作操作 页面   上动态的 操作  是js做的  
	学习   对html  获取元素 --增删改查---
学习语言的流程
	1,从基础学起 

直译式脚本语言      ---不需要编译     动态类型,弱类型,基于原型

	js 依托于html      从上到下执行 当到了js代码的时候 就交给 js引擎去操作了
	一般是 放在head里
	
	当把变量=null  就是把引用 变成要 gc进行去回收
	
	引入js文件形式   --js文件直接写代码      
	<script type="text/javascript" src="../js/fast.js">      ---  ../上一级目录	

	代码多的时候  抽离到一个js文件 里 ,就可以直接写代码     就可以引入
			不同文件的话  ../ 返回上一个目录     先出去 再进去    
			script 标签不能用单标签


	console.log()--打印输出--在浏览器的console台
	alert()模式	

	运算符的区别 = 是赋值操作
		==是比较值 
		===先比较类型 再比较值
	0  "" false  NaN  undefined   null  都表示 false
	
	逻辑运算符的 运算流程  如果是 && 运算  有第一个 false  就输出 这个false的值  ...如果到最后都是 true 那就输出最后的值    (有false输出false对应的值 没有输出最后)	
				||  运算     有第一个true  那就 输出这个 true的值   ...如果最后都是false 那就输出最后的值    (有true输出 ture对应的值  没有 就输出最后的值)
	基本类型
		number,Boolean,String,null,undefined,  ----没有初始化  默认是undefined--


函数	
	在程序中多次执行相同的代码    
	为了重复的使用
	反复使用的功能     

	function 函数名(...){
	                                    --弱类型的 
	}
	---函数没有返回值的话默认是 undefined
	
	匿名方法  顾名思义  没有名字的函数
	function(){}        (这里面放匿名函数)---立即执行函数   --()这样调用  
	回调函数  参数是函数名    function fun(fun1){fun1() }

	函数里面 有一个内置数据接收器  -->可以用来接受所有的参数 然后以数组的形式保存 起来  解决的问题  是做加  sun算法
	
		

全局变量
	函数内不声明变量  不带类型的话  是全局变量 
	
js运行流程
	声明提前原则   就是 1 代码扫描的 时候  会把 变量和函数经行提前 到本作用域的 最前面  
			2再进行执行
内置函数
	查看 w3c   
	编码 解码 encode 
		encodecomponent
	解析 
		parseInt
		parsefload---
		eval("") 把里面的字符串解析成js 并执行
面向对象
	构造函数--首字母大写的 函数		function Person(..){
						this. ...字段
						this.  ...方法
					}

	调用的时候   用 对象 点 字段 或者方法       创建对象    var p =  new Person(...);		
	为单个对象 添加 字段  对象  点   字段  任何 赋值 就可以 添加字段
		也可以用 对象[....]  这种是 区别 关键字 一类的	
		
数组(Array)  查看 w3c .API    ---数组可以是任意类型 在js中
	主要 有一个 splice (要删除的开始索引,删除几个,要添加的元素)  
	利用 Array 的内置类 来  Array.prototype.concat = function(args){return [];};    
	按着类似这样的模式  Arrat.prototype.xxx= ..... 来添加  (中间是重点)
	